services:
  dev_server:
    build:
      context: ../
      dockerfile: docker/ServerDockerfile
    container_name: dev_server_container
    ports:
      - 10000:10000
    command: deno run -N -E -R -W --allow-ffi --watch --unstable-kv --unstable-cron src/server.ts
    image: mecha_agent_server:dev
    volumes:
      - ../src:/assistant-server/src:ro
      - dev_kv_data:/deno-dir/location_data
    env_file:
      - .env.development
    networks:
      - development-network
    depends_on:
      - dev_database
      - dev_vector_database
      - dev_ollama
      - dev-object-storage

  dev_database:
    image: postgres:17.3
    container_name: dev_database_container
    ports:
      - 5432:5432
    volumes:
      - dev_database_storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - development-network

  dev_vector_database:
    image: qdrant/qdrant:v1.13.3
    container_name: dev_vector_database_container
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: always
    networks:
      - development-network

  dev_ollama:
    image: ollama/ollama:0.5.11
    container_name: dev_ollama_container
    volumes:
      - ollama_data:/root/.ollama
    restart: always
    networks:
      - development-network
    environment:
      - OLLAMA_HOST=0.0.0.0

  dev-object-storage:
    image: minio/minio
    container_name: dev_object_storage_container
    command: server /data --console-address ":9001"
    volumes:
      - dev_object_storage:/data
    environment:
      - MINIO_ROOT_USER=${OBJECT_STORAGE_USERNAME}
      - MINIO_ROOT_PASSWORD=${OBJECT_STORAGE_PASSWORD}
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - development-network

  dev_prometheus:
    image: prom/prometheus:v3.2.1
    container_name: dev_prometheus_container
    ports:
      - 9090:9090
    volumes:
      - dev_prometheus_data:/prometheus
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - development-network
    depends_on:
      - dev_server

  dev_grafana:
    image: grafana/grafana:11.6.0
    container_name: dev_grafana_container
    ports:
      - 4444:3000
    volumes:
      - dev_grafana_data:/var/lib/grafana
    networks:
      - development-network
    depends_on:
      - dev_prometheus

  dev-stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: dev_stripe_cli_container
    command: listen -e "customer.subscription.deleted,invoice.payment_succeeded,invoice.payment_failed" -f dev_server:10000/api/subscriptions/webhook
    volumes:
      - dev_stripe_config:/root/.config/stripe
    networks:
      - development-network
    depends_on:
      - dev_server

networks:
  development-network:
    driver: bridge

volumes:
  dev_database_storage:
  ollama_data:
  qdrant_storage:
  dev_object_storage:
  dev_kv_data:
  dev_prometheus_data:
  dev_grafana_data:
  dev_stripe_config:
